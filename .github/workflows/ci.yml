name: CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'helm/**'
      - 'k8s/**'
      - 'README.md'
      - 'Devops.md'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm ci

    - name: Build Next.js application
      run: npm run build

    - name: Cache build output
      uses: actions/cache@v3
      with:
        path: .next
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}

  code-quality:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm ci

    - name: Run ESLint
      run: npm run lint

    - name: Run Prettier
      run: npx prettier --check .

    - name: Run TypeScript compiler
      run: npx tsc --noEmit

  # test:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v4

  #   - name: Set up Node.js
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: '20'

  #   - name: Install dependencies
  #     run: npm ci

  #   - name: Run tests
  #     run: npm test

  push:
    runs-on: ubuntu-latest
    needs: [build, code-quality]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and Push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/eccomerce-app:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  update-newtag-in-helm-chart:
    runs-on: ubuntu-latest
    needs: push

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.TOKEN }}

    - name: Update tag in Helm chart
      run: |
        sed -i 's/tag: .*/tag: "${{ github.sha }}"/' helm/next-web-app-chart/values.yaml

    - name: Commit and push changes
      run: |
        git config --global user.email "iamzainnf@gmail.com"
        git config --global user.name "iamzainn"
        git add helm/next-web-app-chart/values.yaml
        git commit -m "Update tag in Helm chart to ${{ github.sha }}"
        git push